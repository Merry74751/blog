<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.yu.blog.mapper.PostCommentMapper">
    <insert id="insert">
        insert into blog_post_comment(
        comment_id, comment_content, post_id,
        comment_type, from_user_id, from_user_name,
        <if test="fromUserIcon != null">
            from_user_icon,
        </if>
        <if test="toUserId != null">
            to_user_id,
        </if>
        <if test="toUsername != null">
            to_user_name,
        </if>
        <if test="toUserIcon != null">
            to_user_icon,
        </if>
        <if test="toCommentId != null">
            to_comment_id,
        </if>
        comment_create_time
        ) values (
        #{commentId}, #{commentContent}, #{postId}, #{commentType},
        #{fromUserId}, #{fromUsername},
        <if test="fromUserIcon != null">
            #{fromUserIcon},
        </if>
        <if test="toUserId != null">
            #{toUserId},
        </if>
        <if test="toUsername != null">
            #{toUsername},
        </if>
        <if test="toUserIcon != null">
            #{toUserIcon},
        </if>
        <if test="toCommentId != null">
            #{toCommentId},
        </if>
        #{commentCreateTime}
        )
    </insert>

    <delete id="deleteById">
        delete from blog_post_comment
        where comment_id = #{id}
    </delete>


    <select id="listByPostId" resultMap="postComment">
        <include refid="common-select" />
        where post_id = #{id}
    </select>

    <select id="listByToCommentId" resultMap="postComment">
        <include refid="common-select" />
        where to_comment_id = #{id}
    </select>


    <sql id="common-select">
        select comment_id, comment_content, post_id,
        comment_create_time, comment_type, from_user_id,
        from_user_name, from_user_icon, to_user_id,
        to_user_name, to_user_icon, to_comment_id
        from blog_post_comment
    </sql>

    <resultMap id="postComment" type="io.github.yu.blog.model.PostComment">
        <id property="commentId" column="comment_id" />
        <result property="commentContent" column="comment_content" />
        <result property="postId" column="post_id" />
        <result property="commentCreateTime" column="comment_create_time" />
        <result property="commentType" column="comment_type" />
        <result property="fromUserId" column="from_user_id" />
        <result property="fromUsername" column="from_user_name" />
        <result property="fromUserIcon" column="from_user_icon"/>
        <result property="toUserId" column="to_user_id" />
        <result property="toUsername" column="to_user_name" />
        <result property="toUserIcon" column="to_user_icon" />
        <result property="toCommentId" column="to_comment_id" />
    </resultMap>
</mapper>