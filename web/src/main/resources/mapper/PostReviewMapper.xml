<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.yu.blog.mapper.PostReviewMapper">
    <insert id="insert">
        insert into blog_post_review(
        <if test="reviewId != null">
            review_id,
        </if>
        <if test="reviewUsername != null">
            review_username,
        </if>
        <if test="reviewPostId != null">
            review_post_id,
        </if>
        <if test="reviewPostTitle != null">
            review_post_title,
        </if>
        <if test="reviewStatus != null">
            review_status,
        </if>
        <if test="reviewFailReason != null">
            review_fail_reason,
        </if>
        <if test="reviewUpdateTime != null">
            review_update_time,
        </if>
        <if test="reviewCreateTime != null">
            review_create_time
        </if>
        ) values (
        <if test="reviewId != null">
            #{reviewId},
        </if>
        <if test="reviewUsername != null">
            #{reviewUsername},
        </if>
        <if test="reviewPostId != null">
            #{reviewPostId},
        </if>
        <if test="reviewPostTitle != null">
            #{reviewPostTitle},
        </if>
        <if test="reviewStatus != null">
            #{reviewStatus},
        </if>
        <if test="reviewFailReason != null">
            #{reviewFailReason},
        </if>
        <if test="reviewUpdateTime != null">
            #{reviewUpdateTime},
        </if>
        <if test="reviewCreateTime != null">
            #{reviewCreateTime}
        </if>
        )
    </insert>

    <delete id="deleteById">
        delete from blog_post_review
        where review_id = #{review_id}
    </delete>


    <update id="updateById">
        update blog_post_review
        <set>
            <if test="reviewUsername != null">
                review_username = #{reviewUsername},
            </if>
            <if test="reviewStatus != null">
                review_status = #{reviewStatus},
            </if>
            <if test="reviewFailReason != null">
                review_fail_reason = #{reviewFailReason},
            </if>
            <if test="reviewUpdateTime != null">
                review_update_time = #{reviewUpdateTime}
            </if>
        </set>
        where review_id = #{reviewId}
    </update>

    <select id="getById" resultMap="postReview">
        <include refid="select" />
        where review_id = #{id}
    </select>

    <select id="pageListByQuery" resultMap="postReview">
        <include refid="select" />
        <if test="query != null">
            <where>
                <if test="query.reviewStatus != null">
                    review_status = #{query.reviewStatus}
                </if>
            </where>
        </if>
    </select>
    
    <sql id="select">
        select
            review_id, review_username, review_post_id,
            review_post_title,review_status,review_fail_reason,
            review_update_time
        from
            blog_post_review
    </sql>


    <resultMap id="postReview" type="io.github.yu.blog.model.PostReview">
        <id property="reviewId" column="review_id" />
        <result property="reviewUsername" column="review_username" />
        <result property="reviewPostId" column="review_post_id" />
        <result property="reviewPostTitle" column="review_post_title" />
        <result property="reviewStatus" column="review_status" />
        <result property="reviewFailReason" column="review_fail_reason" />
        <result property="reviewCreateTime" column="review_create_time" />
        <result property="reviewUpdateTime" column="review_update_time" />
    </resultMap>
</mapper>